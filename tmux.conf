unbind C-b
set -g prefix `
bind ` send-prefix
#set -g prefix C-a

# move statusbar to the top
set-option -g status-position top

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

set -g history-limit 20000

# Evenly size panes horizontally
bind = select-layout even-horizontal

bind -n C-M-j resize-pane -D 5
bind -n C-M-k resize-pane -U 5
bind -n C-M-h resize-pane -L 5
bind -n C-M-l resize-pane -R 5

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

set-window-option -g mode-keys vi

# Open new windows and splits in current path
bind-key c new-window -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -c "#{pane_current_path}"
bind-key L last-window

bind-key a set-window-option synchronize-panes\;

# Start numbering at 1
set -g base-index 1
set -g pane-base-index 1
# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# status bar
# set -g status-right "#[fg=brightred]%a %d %b %Y #(TZ=Europe/Stockholm date +%%H:%%M)"
set -g status-right ''
set -g status-left ''


set -g mouse off

set -g default-terminal 'xterm'
set-option -ga terminal-overrides ",xterm:Tc"


# Enable sytem copy/paste
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe "xclip -in -selection clipboard"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe "xclip -in -selection clipboard"

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-style bg=black,fg=yellow

# default window title colors
set-window-option -g window-style fg=default,bg=default

# active window title colors
set-window-option -g window-status-current-style  fg=brightred,bg=default
set-window-option -g window-status-style fg=brightblue

# pane border
set-option -g pane-border-style fg=black
set-option -g pane-active-border-style fg=brightgreen

# message text
set-option -g message-style bg=black,fg=brightred

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green)

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
